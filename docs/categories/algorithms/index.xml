<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithms on Davidul</title>
    <link>davidul.github.io/categories/algorithms/</link>
    <description>Recent content in algorithms on Davidul</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 04 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="davidul.github.io/categories/algorithms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Graph Representation</title>
      <link>davidul.github.io/posts/graphs/graph-representation/</link>
      <pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>davidul.github.io/posts/graphs/graph-representation/</guid>
      <description>Graph representation    Types of graph:
 Undirected graph Directed graph Weighted graph  Adjacency matrix    Adjacency matrix stores the edges in a matrix. Adjacency matrix for this graph would be
    0 1 2 3     0 0 1 0 1   1 1 0 1 1   2 0 1 0 0   3 1 1 0 0    This is undirected unweighted graph so we represent every edge by simple 1.</description>
    </item>
    
    <item>
      <title>Breadth First Search</title>
      <link>davidul.github.io/posts/graphs/bfs/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>davidul.github.io/posts/graphs/bfs/</guid>
      <description>Breadth first search    Fundamental algorithm to search the tree or graph. It runs in O(V + E) time, where V is vertex and E is edge. Using intermediate memory to store the same level nodes. It also has to mark the nodes as visited.</description>
    </item>
    
    <item>
      <title>Depth First Search</title>
      <link>davidul.github.io/posts/graphs/dfs/</link>
      <pubDate>Tue, 11 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>davidul.github.io/posts/graphs/dfs/</guid>
      <description>#Depth first search</description>
    </item>
    
  </channel>
</rss>
